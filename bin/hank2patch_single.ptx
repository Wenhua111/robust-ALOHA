//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324574
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_35
.address_size 64

	// .weak	cudaMalloc

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z17hank2patch_singlePfS_iiiii
.visible .entry _Z17hank2patch_singlePfS_iiiii(
	.param .u64 _Z17hank2patch_singlePfS_iiiii_param_0,
	.param .u64 _Z17hank2patch_singlePfS_iiiii_param_1,
	.param .u32 _Z17hank2patch_singlePfS_iiiii_param_2,
	.param .u32 _Z17hank2patch_singlePfS_iiiii_param_3,
	.param .u32 _Z17hank2patch_singlePfS_iiiii_param_4,
	.param .u32 _Z17hank2patch_singlePfS_iiiii_param_5,
	.param .u32 _Z17hank2patch_singlePfS_iiiii_param_6
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<13>;
	.reg .s32 	%r<47>;
	.reg .s64 	%rd<9>;


	ld.param.u64 	%rd3, [_Z17hank2patch_singlePfS_iiiii_param_0];
	ld.param.u64 	%rd4, [_Z17hank2patch_singlePfS_iiiii_param_1];
	ld.param.u32 	%r22, [_Z17hank2patch_singlePfS_iiiii_param_2];
	ld.param.u32 	%r23, [_Z17hank2patch_singlePfS_iiiii_param_3];
	ld.param.u32 	%r26, [_Z17hank2patch_singlePfS_iiiii_param_4];
	ld.param.u32 	%r24, [_Z17hank2patch_singlePfS_iiiii_param_5];
	ld.param.u32 	%r25, [_Z17hank2patch_singlePfS_iiiii_param_6];
	mov.u32 	%r27, %ntid.x;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %tid.x;
	mad.lo.s32 	%r1, %r27, %r28, %r29;
	sub.s32 	%r30, %r22, %r24;
	add.s32 	%r2, %r30, 1;
	sub.s32 	%r31, %r23, %r25;
	add.s32 	%r3, %r31, 1;
	mul.lo.s32 	%r4, %r23, %r22;
	mul.lo.s32 	%r32, %r4, %r26;
	setp.ge.s32	%p1, %r1, %r32;
	@%p1 bra 	BB6_10;

	cvta.to.global.u64 	%rd5, %rd3;
	rem.s32 	%r34, %r1, %r4;
	rem.s32 	%r5, %r34, %r22;
	div.s32 	%r6, %r34, %r22;
	div.s32 	%r7, %r1, %r4;
	mad.lo.s32 	%r35, %r7, %r23, %r6;
	mad.lo.s32 	%r36, %r35, %r22, %r5;
	mul.wide.s32 	%rd6, %r36, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mov.u32 	%r46, 0;
	st.global.u32 	[%rd1], %r46;
	setp.lt.s32	%p2, %r6, 0;
	mov.f32 	%f12, 0f00000000;
	@%p2 bra 	BB6_9;

	cvta.to.global.u64 	%rd2, %rd4;
	mul.lo.s32 	%r8, %r7, %r25;
	mov.u32 	%r44, 0;
	mov.u32 	%r46, %r44;
	mov.f32 	%f12, 0f00000000;

BB6_3:
	sub.s32 	%r11, %r6, %r44;
	setp.ge.s32	%p3, %r11, %r25;
	setp.ge.s32	%p4, %r44, %r3;
	or.pred  	%p5, %p3, %p4;
	setp.lt.s32	%p6, %r5, 0;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB6_8;

	add.s32 	%r40, %r11, %r8;
	mul.lo.s32 	%r12, %r40, %r24;
	mov.u32 	%r45, 0;

BB6_5:
	sub.s32 	%r15, %r5, %r45;
	setp.lt.s32	%p8, %r15, %r24;
	setp.lt.s32	%p9, %r45, %r2;
	and.pred  	%p10, %p9, %p8;
	@!%p10 bra 	BB6_7;
	bra.uni 	BB6_6;

BB6_6:
	add.s32 	%r41, %r12, %r15;
	mad.lo.s32 	%r42, %r41, %r3, %r44;
	mad.lo.s32 	%r43, %r42, %r2, %r45;
	mul.wide.s32 	%rd7, %r43, 4;
	add.s64 	%rd8, %rd2, %rd7;
	ld.global.f32 	%f9, [%rd8];
	add.f32 	%f12, %f9, %f12;
	st.global.f32 	[%rd1], %f12;
	add.s32 	%r46, %r46, 1;

BB6_7:
	add.s32 	%r45, %r45, 1;
	setp.ge.s32	%p11, %r5, %r45;
	@%p11 bra 	BB6_5;

BB6_8:
	add.s32 	%r44, %r44, 1;
	setp.ge.s32	%p12, %r6, %r44;
	@%p12 bra 	BB6_3;

BB6_9:
	cvt.rn.f32.s32	%f10, %r46;
	div.rn.f32 	%f11, %f12, %f10;
	st.global.f32 	[%rd1], %f11;

BB6_10:
	ret;
}


